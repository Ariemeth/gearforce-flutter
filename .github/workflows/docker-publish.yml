name: Docker

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: edwardcarmack/gearforce-web

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
        
      - name: 'Gather variables'
        id: gather-variables
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          
          IMAGE_TAGS="$IMAGE_NAME:$VERSION,$IMAGE_NAME:${{ github.sha }}"

          echo "::set-output name=IMAGE_TAGS::$IMAGE_TAGS"            

      # Set up Flutter.
      - name: Clone Flutter repository with stable channel
        uses: subosito/flutter-action@v1.5.0
        with:
          channel: stable
      - run: flutter doctor -v

      # Checkout code and get packages.
      - name: Checkout code
        uses: actions/checkout@v2
      - run: flutter pub get

      # Analyze, check formatting, and run unit tests.
      - run: flutter analyze
      - name: Ensure the Dart code is formatted correctly
        run: flutter format --set-exit-if-changed --dry-run .
      - name: Run Flutter unit tests
        run: flutter test

      - name: Build Flutter web
        run: flutter build web --release

      - name: 'Set up QEMU'
        uses: docker/setup-qemu-action@v1
        
      - name: 'Set up Docker Buildx'
        uses: docker/setup-buildx-action@v1

      - name: 'Log into DockerHub'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 'Build and push'
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          target: release
          tags: ${{ steps.gather-variables.outputs.IMAGE_TAGS }}
      
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Deploy to Azure Container Instances'
        uses: 'azure/aci-deploy@v1'
        with:
          resource-group: ${{ secrets.AZURE_RESOURCE_GROUP }}
          dns-name-label: ${{ secrets.AZURE_RESOURCE_GROUP }}
          image: edwardcarmack/gearforce-web:${{ github.sha }}
          name: ${{ secrets.AZURE_CONTAINER_INSTANCE }}
          location: 'east us'
          cpu: 0.5
          memory: 0.5
          ports: 80 443
          azure-file-volume-share-name: ${{ secrets.AZURE_SHARE_NAME }}
          azure-file-volume-account-name: ${{ secrets.AZURE_FILE_VOLUME_NAME }}
          azure-file-volume-account-key: ${{ secrets.AZURE_FILE_VOLUME_KEY }}
          azure-file-volume-mount-path: "${{ secrets.VOLUME_MOUNT_PATH }}"
          environment-variables: "HOST_URL=gearforce.eastus.azurecontainer.io,hg.metadiversions.com"
